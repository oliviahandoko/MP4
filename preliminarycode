---
title: "MP4"
output: 
  html_document:
    theme: lumen 
    code_folding: hide
---
```{r leaflet, fig.align="center", message=FALSE, warning=FALSE, echo=FALSE}
library(tidyverse)
library(RMySQL)
library(tigris)
library(dplyr)
library(rgdal)
library(rgeos)
library(leaflet)
library(ggplot2)
library(dplyr)
library(cowplot)
library(gridExtra)
library(ggupbr)
library('ggmap')
db <- dbConnect(MySQL(),
                host = "scidb.smith.edu", 
                user = "mth292", 
                password = "RememberPi",
                dbname = "citibike")
knitr::opts_chunk$set(connection = db, max.print = 20)
```


```{r message=FALSE, warning=FALSE}
#in a span of a year 
data_citibike <- dbGetQuery(db, "SELECT name, avg_lat, avg_lon, duration, start_station_id, user_type, gender
                            FROM trips JOIN station_months ON trips.start_station_id = station_months.station_id")

#changing lat/lon for spatial data later
colnames(data_citibike)[colnames(data_citibike) =='avg_lat'] <- 'lat'
colnames(data_citibike)[colnames(data_citibike) =='avg_lon'] <- 'lon'
```


```{r message=FALSE, warning=FALSE}
#have to use r after joining in SQL because rmarkdown could not handle me using SQL on this big dataset
citicount <- data_citibike %>%
  group_by(name) %>%
  count(user_type) %>%
  #filtering out names without lat/lon
  filter(name != "Washington Street (Don't Use)") %>%
  filter(name != '333 Johnson TEST 1') %>%
  filter(name != "JSQ Don't Use") %>% 
  filter(name!= "LPI Facility") %>%
  filter(name!= "NYCBS Depot - STY - Valet Scan")
```


[some writing]
```{r message=FALSE, warning=FALSE}
#filtering out ones where user_type = NA(because type is essential for later use)
citicount <- citicount %>%
  filter(user_type != 'NA') %>%
  mutate(total = sum(n)) %>%
  mutate(percent = n/total)

#finding top 20 most popular starting station 
citicount_most <- citicount %>%
  filter(total >= 900000) %>%
  distinct()

#finding top 17 least popluar starting station 
citicount_least <- citicount %>%
  filter(total <= 200) %>% 
  distinct() 
```


```{r message=FALSE, warning=FALSE}
duration <- data_citibike %>%
  select(name, duration, user_type) %>%
  filter(user_type != 'NA') %>%
  #filterning names without lat, lon
  filter(name != "Washington Street (Don't Use)") %>%
  filter(name != '333 Johnson TEST 1') %>%
  filter(name != "JSQ Don't Use") %>% 
  filter(name!= "LPI Facility") %>%
  filter(name!= "NYCBS Depot - STY - Valet Scan")
```

```{r message=FALSE, warning=FALSE}
duration <- duration %>%
  group_by(name, user_type) %>%
  mutate(duration_total = sum(duration)) 

duration <- duration[!duplicated(duration$duration_total),]

x <- merge(duration, citicount_most)
y <- merge(duration, citicount_least)

location <- data_citibike %>%
  select(name, lat, lon)
```

```{r message=FALSE, warning=FALSE}
#putting everything in one dataframe (lat, lon, percentage of subscribers/customers, duration, fraction of duration for subsriber/customer) so easier to look at
location_least <- merge(location, y) 
location_least <- location_least[!duplicated(location_least$duration_total),]

location_most  <- merge(location, x)
location_most <- location_most[!duplicated(location_most$duration_total),]
```

```{r message=FALSE, warning=FALSE}
#spatial data to show most popular and least popular starting CitiBike stations 
#reference: https://rpubs.com/jhofman/nycmaps
m <- leaflet() %>%
  addTiles() %>%
  addCircles(data = location_least, color = 'green') %>%
  addCircles(data = location_most, color = "black") %>%
  setView(-73.95, 40.75, zoom = 11)

#area of part of the bronx
m %>%
  addCircles(lng = -73.865433, lat = 40.837048, radius = 1000, label = "The Bronx", labelOptions(noHide = T, textOnly = TRUE)) %>%
  #area of part of Manhattan
  addCircles(lng = -73.989829374, lat = 40.723663772, radius = 1000, label = "Manhattan", labelOptions(noHide = T, textOnly = TRUE)) %>%
  addProviderTiles("CartoDB.Positron")

```


```{r message=FALSE, warning=FALSE}

avg_least_percent <- location_least %>%
  select(user_type, percent) %>%
  group_by(user_type) %>%
  mutate(percent_avg = mean(percent)) 
avg_least_percent <- avg_least_percent[!duplicated(avg_least_percent$percent_avg),]

avg_most_percent <- location_most %>%
  select(user_type, percent) %>%
  group_by(user_type) %>%
  mutate(percent_avg = mean(percent))
avg_most_percent <- avg_most_percent[!duplicated(avg_most_percent$percent_avg),]

avg_least_riders <- location_least %>%
  select(user_type, n) %>%
  group_by(user_type) %>%
  mutate(riders_avg = mean(n)) 
avg_least_riders <- avg_least_riders[!duplicated(avg_least_riders$riders_avg),]

avg_most_riders <- location_most %>%
  select(user_type, n) %>%
  group_by(user_type) %>%
  mutate(riders_avg = mean(n)) 
avg_most_riders <- avg_most_riders[!duplicated(avg_most_riders$riders_avg),]
```

```{r message=FALSE, warning=FALSE}
x <- ggplot(data = avg_least_percent, aes(x = user_type, y = percent_avg, fill = user_type)) +
  geom_bar(stat = 'identity') + theme_bw() + 
  scale_y_continuous(labels = scales::percent) + 
  xlab("Citibike's types of user (Customer or Subscriber)") +
  ylab("Average percentage of types of user") + 
  theme(legend.position= 'none', axis.title.x = element_blank()) + 
  annotate(geom = "text", x = 1, y = .90, label = 'Least Popular', color = 'black', size = 5 ) + 
  annotate(geom = "text", x = 1, y = .25, label = '31%', color = 'white', size = 5 ) + 
  annotate(geom = "text", x = 2, y = .80, label = '88%', color = 'white', size = 5 ) + 
  annotate(geom = "text", x = 2, y = .90, label = 'Avg. # of riders: 36', color = 'black', size = 3 ) + 
  annotate(geom = "text", x = 1, y = .35, label = 'Avg. # of riders: 38', color = 'black', size = 3) + 
  scale_fill_brewer(palette="Dark2")
  
 y <- ggplot(data = avg_most_percent, aes(x = user_type, y = percent_avg, fill = user_type)) +
  geom_bar(stat = 'identity') + 
   theme_bw() + 
   scale_y_continuous(labels = scales::percent) +
   xlab("Citibike's types of user (Customer or Subscriber)") + theme(legend.position= 'none', axis.title.y = element_blank(), axis.title.x = element_blank()) + 
   annotate(geom = "text", x = 1, y = .90, label = 'Most Popular', color = 'black', size = 5 ) + 
   annotate(geom = "text", x = 1, y = .10, label = '13%', color = 'white', size = 5 ) + 
   annotate(geom = "text", x = 2, y = .80, label = '87%', color = 'white', size = 5) + 
   annotate(geom = "text", x = 1, y = .16, label = 'Avg. # of riders: 134,118', color = 'black', size = 3) + 
   annotate(geom = "text", x = 2, y = .90, label = 'Avg. # of riders: 966,935', color = 'black', size = 3) + 
   scale_fill_brewer(palette="Dark2")
```

```{r message=FALSE, warning=FALSE}
bar_graphs <- ggarrange(x, y)

annotate_figure(bar_graphs, top = text_grob("Top 20 Most/Least Popular Citibike starting stations"))

#not all citibike stations had subscribers/customers thus why there is average of 38 riders for customers and 36 for subscribers for least popular 
```

